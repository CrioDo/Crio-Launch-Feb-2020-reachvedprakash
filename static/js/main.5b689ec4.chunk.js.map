{"version":3,"sources":["assets/crio-logo.svg","components/common/Card.js","components/common/Typography.js","components/common/Loader/Loader.js","components/Home.js","components/common/Navbar.js","components/MEDetail.js","AppWrapper.js","App.js","index.js","assets/crio-logo-white.svg"],"names":["module","exports","Card","classes","this","props","className","container","children","Component","withStyles","theme","margin","height","background","palette","primary","white","padding","boxShadow","getFontFamily","type","getFontSize","getFontWeight","Typography","passedProps","color","root","style","cursor","fontFamily","fontSize","fontWeight","currentTheme","getColor","letterSpacing","defaultProps","opacity","Home","state","meDetail","user","isLoading","qbox","qmoney","qcharm","qprep","title","bind","str","replace","t","toUpperCase","Grid","row","lg","md","xs","top","process","subtitle","href","target","rel","icon","socialIcon","programs","item","marginLeft","border","width","borderRadius","display","alignItems","marginRight","arrowIcon","middle","programRow","programPill","alt","src","crioLogo","MERow","class","marginTop","ReactHtmlParser","myJson","qbox_outer","cardContentContainer","cardContentList","cardBody","skills","to","pathname","aboutProps","data","getTitle","borderBottom","marginBottom","qmoney_outer","primaryBorder","Navbar","navbar","MEDetail","me","currentME","match","params","meid","setState","scrollTop","ref","el","textAlign","qbox_milestone0","map","ele","idx","containerTitle","length","qmoney_milestone0","qprep_outer","qcharm_outer","AppWrapper","createMuiTheme","main","primaryBackground","black","red","green","orange","grey","greyTwo","purple","yellow","secondary","secondaryBackground","tertiaryBackground","defaultPath","detailPath","console","log","concat","basename","backgroundColor","overflowX","exact","path","render","component","library","add","faLinkedin","faGithub","faArrowRight","faFolder","faFileAlt","faArrowLeft","App","document","require","config","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5b689ec4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crio-logo.63be71d0.svg\";","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nconst styles = theme => ({\n  container: {\n    margin: \"40px 0px\",\n    height: \"auto\",\n    background: theme.palette.primary.white,\n    padding: \"65px 0px 25px 0px\",\n    boxShadow: \"0 10px 20px 0 rgba(20,21,26,0.1)\"\n  }\n});\nclass Card extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return <div className={classes.container}>{this.props.children}</div>;\n  }\n}\nexport default withStyles(styles)(Card);\n","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MuiTypography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n  root: {\n    letterSpacing: 0,\n    opacity: 1\n  }\n});\n\nconst getFontFamily = type => {\n  switch (type) {\n    case \"heading1\":\n      return \"Open Sans\";\n    case \"heading2\":\n      return \"Open Sans\";\n    case \"heading3\":\n      return \"Open Sans\";\n    case \"heading4\":\n      return \"Open Sans\";\n    case \"heading5\":\n      return \"Open Sans\";\n    case \"headLine\":\n      return \"Open Sans\";\n    case \"button\":\n      return \"Open Sans\";\n    case \"title\":\n      return \"Open Sans\";\n    case \"subHeader\":\n      return \"Open Sans\";\n    case \"button\":\n      return \"Open Sans\";\n    default:\n      return \"Open Sans\";\n  }\n};\n\nconst getFontSize = type => {\n  switch (type) {\n    case \"heading1\":\n      return \"32px\";\n    case \"heading2\":\n      return \"24px\";\n    case \"heading3\":\n      return \"18px\";\n    case \"heading4\":\n      return \"16px\";\n    case \"heading5\":\n      return \"14px\";\n    case \"body1\":\n      return \"18px\";\n    case \"body2\":\n      return \"16px\";\n    case \"body3\":\n      return \"14px\";\n    case \"body4\":\n      return \"12px\";\n    case \"quote\":\n      return \"20px\";\n    case \"button\":\n      return \"14px\";\n\n    default:\n      return \"14px\";\n  }\n};\n\nconst getFontWeight = type => {\n  switch (type) {\n    case \"heading1\":\n      return \"600\";\n    case \"heading2\":\n      return \"600\";\n    case \"heading3\":\n      return \"600\";\n    case \"heading4\":\n      return \"600\";\n    case \"heading5\":\n      return \"600\";\n    case \"body1\":\n      return \"400\";\n    case \"body2\":\n      return \"400\";\n    case \"body3\":\n      return \"400\";\n    case \"body4\":\n      return \"400\";\n    case \"quote\":\n      return \"600\";\n    case \"button\":\n      return \"600\";\n    case \"bold\":\n      return \"800\";\n\n    default:\n      return \"400\";\n  }\n};\n\nconst Typography = props => {\n  const { classes } = props;\n  //Log(props);\n  const { color, ...passedProps } = props;\n  const getColor = type => {\n    if (props.currentTheme === \"dark\") {\n      return \"#ffffff\";\n    } else {\n      switch (type) {\n        case \"heading1\":\n          return \"#000000\";\n        case \"heading2\":\n          return \"#000000\";\n        case \"heading3\":\n          return \"#000000\";\n        case \"heading4\":\n          return \"#000000\";\n        case \"heading5\":\n          return \"#000000\";\n        case \"button\":\n          return \"#FFFFFF\";\n\n        default:\n          return \"#000000\";\n      }\n    }\n  };\n  return (\n    <MuiTypography\n      className={classes.root}\n      style={{\n        cursor: props.cursor ? props.cursor : \"default\",\n        fontFamily: props.fontFamily\n          ? props.fontFamily\n          : getFontFamily(props.type),\n        fontSize: props.fontSize ? props.fontSize : getFontSize(props.type),\n        fontWeight: props.fontWeight\n          ? props.fontWeight\n          : getFontWeight(props.type),\n        color: props.color ? props.color : getColor(props.type),\n        letterSpacing: \"0.04em\"\n      }}\n      {...passedProps}\n    >\n      {props.children}\n    </MuiTypography>\n  );\n};\n\nTypography.propTypes = {\n  type: PropTypes.string\n};\n\nTypography.defaultProps = {\n  type: \"body\"\n};\n\nexport default withStyles(styles)(Typography);\n","import React, { Component } from \"react\";\nimport \"./loader.scss\";\n\nexport default class Class extends Component {\n  render() {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <svg\n          class=\"spinner\"\n          width=\"65px\"\n          height=\"65px\"\n          viewBox=\"0 0 66 66\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <circle\n            class=\"path\"\n            fill=\"none\"\n            stroke-width=\"6\"\n            stroke-linecap=\"round\"\n            cx=\"33\"\n            cy=\"33\"\n            r=\"10\"\n          ></circle>\n        </svg>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Card from \"./common/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"./common/Typography\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport crioLogo from \"../../src/assets/crio-logo-white.svg\";\nimport axios from \"axios\";\nimport Loader from \"./common/Loader/Loader\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport myJson from \"../data/data.json\";\n\nconst styles = theme => ({\n  top: {\n    borderBottom: \"1px solid\" + theme.palette.primary.primaryBorder,\n    padding: \"0px 55px\"\n  },\n  middle: {\n    margin: \"45px 55px\"\n  },\n  subtitle: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  socialIcon: {\n    color: theme.palette.primary.primary,\n    fontSize: \"32px\",\n    marginLeft: \"20px\"\n  },\n  arrowIcon: {\n    color: theme.palette.primary.primary,\n    marginLeft: \"5px\",\n    cursor: \"pointer\"\n  },\n  programs: {\n    margin: \"35px 0px 30px 0px\",\n    color: \"rgba(0, 0, 0, 0.6)\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n\n  programRow: { padding: \"10px 0px 0px 0px\" },\n  MERow: {\n    margin: \"55px 0px 0px 0px\"\n    // borderBottom: \"1px solid\" + theme.palette.primary.primaryBorder\n  },\n  programPill: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"#3f3f3f\",\n    width: \"fit-content\",\n    padding: \"16px\",\n    borderRadius: \"8px\",\n    margin: \"10px 0px\"\n  }\n});\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meDetail: {},\n      user: \"\",\n      isLoading: true,\n      qbox: {},\n      qmoney: \"\",\n      qcharm: \"\",\n      qprep: \"\"\n    };\n    this.title = this.title.bind(this);\n  }\n\n  title(str) {\n    return str.replace(/(^|\\s)\\S/g, function(t) {\n      return t.toUpperCase();\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid row lg={2} md={1} xs={1}></Grid>\n        <Grid row lg={7} md={10} xs={10}>\n          <Card>\n            <div className={classes.top}>\n              <Typography fontSize=\"48px\">\n                {process.env.REACT_APP_FULL_NAME}\n              </Typography>\n              <div className={classes.subtitle}>\n                <Typography fontSize=\"34px\" color=\"rgba(0,0,0,0.6)\">\n                  Backend Developer\n                </Typography>\n                <a\n                  href={process.env.REACT_APP_LINKEDIN}\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  <FontAwesomeIcon\n                    icon={[\"fab\", \"linkedin\"]}\n                    className={classes.socialIcon}\n                  ></FontAwesomeIcon>\n                </a>\n                <a\n                  href={\"http://github.com/\" + process.env.REACT_APP_GITHUB}\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  <FontAwesomeIcon\n                    icon={[\"fab\", \"github\"]}\n                    className={classes.socialIcon}\n                  ></FontAwesomeIcon>\n                </a>\n              </div>\n              <div className={classes.programs}>\n                <Grid container>\n                  <Grid item lg={1} md={1} xs={12}>\n                    <Typography type=\"body2\" color=\"rgba(0,0,0,0.6)\">\n                      Programs:\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={5}\n                    md={5}\n                    xs={12}\n                    style={{ marginLeft: \"40px\" }}\n                  >\n                    <Typography type=\"body2\" color=\"#7C8DFF\">\n                      Crio Launch\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </div>\n              <a href={process.env.REACT_APP_CERTIFICATE_LINK} target=\"_blank\">\n                <div\n                  className=\"viewCertificate\"\n                  style={{\n                    padding: \"10px\",\n                    border: \"1px solid #7C8DFF\",\n                    width: \"max-content\",\n                    borderRadius: \"4px\",\n                    margin: \"0px 0px 60px 0px\",\n                    display: \"inline-flex\",\n                    alignItems: \"center\"\n                  }}\n                >\n                  <FontAwesomeIcon\n                    icon={[\"fas\", \"file-alt\"]}\n                    style={{ marginRight: \"10px\" }}\n                    className={classes.arrowIcon}\n                  ></FontAwesomeIcon>\n                  <Typography type=\"body2\" color=\"#7C8DFF\" cursor=\"pointer\">\n                    VIEW CERTIFICATE\n                  </Typography>\n                </div>\n              </a>\n            </div>\n            <div className={classes.middle}>\n              <Typography type=\"body1\" color=\"rgba(0,0,0,0.6)\">\n                Crio Experience\n              </Typography>\n              <div className={classes.programRow}>\n                <div className={classes.programPill}>\n                  <img\n                    alt=\"Crio.Do\"\n                    src={crioLogo}\n                    style={{ marginRight: \"10px\" }}\n                  ></img>\n                  <Typography type=\"heading3\" color=\"rgba(255,255,255,1)\">\n                    Crio Launch\n                  </Typography>\n                </div>\n                <Typography type=\"body5\" color=\"rgba(0,0,0,0.6)\">\n                  31 Oct 2019 - 29 Feb 2020\n                </Typography>\n              </div>\n              <ul className=\"timeline\">\n                <li>\n                  <div className={classes.MERow} class=\"meRow\">\n                    <Grid container>\n                      <Grid item xs={12}>\n                        <Typography type=\"heading3\" color=\"rgba(0,0,0,1)\">\n                          QBox\n                        </Typography>\n                        <div style={{ marginTop: \"16px\" }}>\n                          <Typography type=\"body5\" color=\"rgba(0,0,0,1)\">\n                            {\" \"}\n                            {ReactHtmlParser(\n                              myJson.qbox_outer.cardContentContainer\n                                .cardContentList[1].cardBody\n                            )}{\" \"}\n                          </Typography>\n                          <div style={{ marginTop: \"25px\" }}>\n                            <Grid item xs={12} md={2}>\n                              <Typography type=\"body5\" color=\"rgba(0,0,0,0.6)\">\n                                Skills Learned:\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={10}>\n                              <Typography type=\"body5\" color=\"rgba(0,0,0,1)\">\n                                {ReactHtmlParser(myJson.qbox_outer.skills)}{\" \"}\n                              </Typography>\n                            </Grid>\n                          </div>\n                          <div style={{ margin: \"30px 0px\" }}>\n                            <Grid container>\n                              <Grid item xs={4}>\n                                <Link\n                                  to={{\n                                    pathname: \"/detail/ME_QBOX\",\n                                    aboutProps: {\n                                      data: this.state.meDetail[\"ME_QBOX\"],\n                                      getTitle: this.props.getTitle\n                                    }\n                                  }}\n                                >\n                                  <Typography\n                                    type=\"body5\"\n                                    color=\"#7C8DFF\"\n                                    cursor=\"pointer\"\n                                  >\n                                    VIEW DETAILS\n                                    <FontAwesomeIcon\n                                      icon={[\"fas\", \"arrow-right\"]}\n                                      className={classes.arrowIcon}\n                                    ></FontAwesomeIcon>\n                                  </Typography>\n                                </Link>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </li>\n                <div\n                  style={{\n                    marginLeft: \"80px\",\n                    borderBottom: \"1px solid #d8d8d8\",\n                    marginBottom: \"30px\"\n                  }}\n                ></div>\n                <li>\n                  <div className={classes.MERow} class=\"meRow\">\n                    <Grid container>\n                      <Grid item xs={12}>\n                        <Typography type=\"heading3\" color=\"rgba(0,0,0,1)\">\n                          QMoney\n                        </Typography>\n                        <div style={{ marginTop: \"16px\" }}>\n                          <Typography type=\"body5\" color=\"rgba(0,0,0,1)\">\n                            {ReactHtmlParser(\n                              myJson.qmoney_outer.cardContentContainer\n                                .cardContentList[1].cardBody\n                            )}{\" \"}\n                          </Typography>\n                          <div style={{ marginTop: \"25px\" }}>\n                            <Grid item xs={12} md={2}>\n                              <Typography type=\"body5\" color=\"rgba(0,0,0,0.6)\">\n                                Skills Learned:\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={10}>\n                              <Typography type=\"body5\" color=\"rgba(0,0,0,1)\">\n                                {ReactHtmlParser(myJson.qmoney_outer.skills)}{\" \"}\n                              </Typography>\n                            </Grid>\n                          </div>\n                          <div style={{ margin: \"40px 0px\" }}>\n                            <Grid container>\n                              <Grid item xs={4}>\n                                <Link\n                                  to={{\n                                    pathname: \"/detail/ME_QMONEY\",\n                                    aboutProps: {\n                                      data: this.state.meDetail[\"ME_QMONEY\"],\n                                      getTitle: this.props.getTitle\n                                    }\n                                  }}\n                                >\n                                  <Typography\n                                    type=\"body5\"\n                                    color=\"#7C8DFF\"\n                                    cursor=\"pointer\"\n                                  >\n                                    VIEW DETAILS\n                                    <FontAwesomeIcon\n                                      icon={[\"fas\", \"arrow-right\"]}\n                                      className={classes.arrowIcon}\n                                    ></FontAwesomeIcon>\n                                  </Typography>\n                                </Link>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </li>\n                <div\n                  style={{\n                    marginLeft: \"80px\",\n                    borderBottom: \"1px solid #d8d8d8\",\n                    marginBottom: \"30px\"\n                  }}\n                ></div>{\" \"}\n                {/* <li> \n                  <div className={classes.MERow} class=\"meRow\">\n                    <Grid container>\n                      <Grid item xs={12}>\n                        <Typography type=\"heading3\" color=\"rgba(0,0,0,1)\">\n                          QMoney Stock Analyzer\n                        </Typography>\n                        <div style={{ marginTop: \"16px\" }}>\n                          <Typography type=\"body5\" color=\"rgba(0,0,0,1)\">\n                            QMoney Stock Analyzer is a tool to help users get\n                            useful data about their stock portfolios. In this\n                            Micro-Experience, developers query third-party stock\n                            quote services (via APIs) and generate metrics such\n                            as volatility and daily/annualized returns to\n                            analyze stocks present in their portfolios.\n                          </Typography>\n                          <div style={{ marginTop: \"25px\" }}>\n                            <Grid item xs={12} md={2}>\n                              <Typography type=\"body5\" color=\"rgba(0,0,0,0.6)\">\n                                Skills Learned:\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={10}>\n                              <Typography type=\"body5\" color=\"rgba(0,0,0,1)\">\n                                Java Interfaces, REST API, Factory Patterns,\n                                Mockito\n                              </Typography>\n                            </Grid>\n                          </div>\n                          <div style={{ margin: \"50px 0px\" }}>\n                            <Grid container>\n                              <Grid item xs={4}>\n                                <Link\n                                  to={{\n                                    pathname: \"/detail/ME_STOCK_ANALYZER\",\n                                    aboutProps: {\n                                      data: this.state.meDetail[\n                                        \"ME_STOCK_ANALYZER\"\n                                      ],\n                                      getTitle: this.props.getTitle\n                                    }\n                                  }}\n                                >\n                                  <Typography\n                                    type=\"body5\"\n                                    color=\"#7C8DFF\"\n                                    cursor=\"pointer\"\n                                  >\n                                    VIEW DETAILS\n                                    <FontAwesomeIcon\n                                      icon={[\"fas\", \"arrow-right\"]}\n                                      className={classes.arrowIcon}\n                                    ></FontAwesomeIcon>\n                                  </Typography>\n                                </Link>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </li> */}\n              </ul>\n            </div>\n          </Card>\n        </Grid>\n        <Grid row lg={2} md={1} xs={1}></Grid>\n      </Grid>\n    );\n  }\n}\nexport default withStyles(styles)(Home);\n","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"../common/Typography\";\nimport crioLogo from \"../../../src/assets/crio-logo.svg\";\nimport { NavLink } from \"react-router-dom\";\n\nconst styles = theme => ({\n  navbar: {\n    height: \"80px\",\n    background: theme.palette.primary.white,\n    display: \"flex\",\n    padding: \"0px 32px\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid\" + theme.palette.primary.primaryBorder\n  }\n});\nclass Navbar extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.navbar}>\n        <NavLink to=\"/\">\n          <img alt=\"Crio.Do\" src={crioLogo}></img>\n          <div style={{ marginLeft: \"16px\" }}>\n            <Typography type=\"heading4\" fontWeight=\"bold\" cursor=\"pointer\">\n              {this.props.title}\n            </Typography>\n          </div>\n        </NavLink>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(Navbar);\n","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Card from \"./common/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"./common/Typography\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TreeView from \"@material-ui/lab/TreeView\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport crioLogo from \"../../src/assets/crio-logo-white.svg\";\nimport axios from \"axios\";\nimport Loader from \"./common/Loader/Loader\";\n\nimport Zoom from \"react-medium-image-zoom\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport myJson from \"../data/data.json\";\n\nconst styles = (theme) => ({\n  top: {\n    borderBottom: \"1px solid\" + theme.palette.primary.primaryBorder,\n    padding: \"0px 55px 60px 55px\",\n  },\n  middle: {\n    margin: \"45px 55px\",\n  },\n  subtitle: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  socialIcon: {\n    color: theme.palette.primary.primary,\n    fontSize: \"32px\",\n    marginLeft: \"20px\",\n  },\n  arrowIcon: {\n    color: theme.palette.primary.primary,\n    marginLeft: \"5px\",\n    cursor: \"pointer\",\n  },\n  programs: {\n    margin: \"45px 0px\",\n    color: \"rgba(0, 0, 0, 0.6)\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  programRow: { padding: \"60px 0px 0px 0px\" },\n  MERow: {\n    margin: \"55px 0px 0px 0px\",\n  },\n  programPill: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    background: \"#3f3f3f\",\n    width: \"fit-content\",\n    padding: \"16px\",\n    borderRadius: \"8px\",\n    margin: \"10px 0px\",\n  },\n});\nclass MEDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { meDetail: {}, data: \"\", me: \"\", isLoading: true };\n  }\n  componentDidMount() {\n    let currentME = this.props.match.params.meid;\n    this.setState({ me: currentME }, () => {});\n    this.container.scrollTop = 0;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container ref={(el) => (this.container = el)}>\n        <Grid row lg={2} md={1} xs={1}></Grid>\n        <Grid row lg={7} md={10} xs={10}>\n          <Card>\n            {this.state.me === \"ME_QBOX\" ? (\n              <>\n                <Link\n                  to={{\n                    pathname: \"/\",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"inline-flex\",\n                      alignItems: \"center\",\n                      marginBottom: \"20px\",\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      icon={[\"fas\", \"arrow-left\"]}\n                      style={{\n                        fontSize: \"1.5em\",\n                        margin: \"0px 10px 0px 55px\",\n                        cursor: \"pointer\",\n                        color: \"#999\",\n                      }}\n                    ></FontAwesomeIcon>\n                    <Typography cursor=\"pointer\" color=\"#999\">\n                      Back\n                    </Typography>\n                  </div>\n                </Link>\n                <div className={classes.top}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <div style={{ margin: \"0px 0px 10px 0px\" }}>\n                        <Typography fontSize=\"46px\"> QBox</Typography>\n                      </div>\n                      <Typography fontSize=\"30px\" color=\"rgba(0,0,0,0.6)\">\n                        {ReactHtmlParser(\n                          myJson.qbox_outer.cardContentContainer\n                            .cardContentList[0].cardBody\n                        )}{\" \"}\n                      </Typography>\n                      <Typography fontSize=\"14px\">\n                        {ReactHtmlParser(\n                          myJson.qbox_outer.cardContentContainer\n                            .cardContentList[1].cardBody\n                        )}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={5} style={{ textAlign: \"right\" }}></Grid>\n                    <Grid item xs={12}>\n                      <div style={{ textAlign: \"center\" }}>\n                        {ReactHtmlParser(\n                          myJson.qbox_milestone0.cardContentContainer\n                            .cardContentList[0].cardBody\n                        )}{\" \"}\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n                <div className={classes.middle}>\n                  <Typography color=\"rgba(0,0,0,1)\" fontSize=\"20px\">\n                    QBox Modules\n                  </Typography>\n\n                  <ul className=\"timeline\">\n                    {myJson[\"qbox_inner\"].map((ele, idx) => (\n                      <>\n                        <li>\n                          <div className={classes.MERow} class=\"meRow\">\n                            <Grid container>\n                              <Grid item xs={12}>\n                                <Typography\n                                  type=\"heading3\"\n                                  color=\"rgba(0,0,0,1)\"\n                                >\n                                  {ReactHtmlParser(\n                                    ele.cardContentContainer.containerTitle\n                                  )}\n                                </Typography>\n                                <div style={{ marginTop: \"16px\" }}>\n                                  <Grid container>\n                                    <Grid item xs={12} md={12} lg={12}>\n                                      <Typography\n                                        type=\"body5\"\n                                        color=\"rgba(0,0,0,0.6)\"\n                                      >\n                                        Scope of work:\n                                      </Typography>\n                                    </Grid>\n                                    <Grid item xs={12} md={12} lg={12}>\n                                      <br></br>\n                                      <Typography type=\"body5\" color=\"#000\">\n                                        {ReactHtmlParser(\n                                          ele.cardContentContainer\n                                            .cardContentList[0].cardBody\n                                        )}\n                                      </Typography>\n                                    </Grid>\n                                  </Grid>\n\n                                  <div style={{ marginTop: \"25px\" }}>\n                                    <Grid item xs={12} md={2}>\n                                      <Typography\n                                        type=\"body5\"\n                                        color=\"rgba(0,0,0,0.6)\"\n                                      >\n                                        Skills Learned:\n                                      </Typography>\n                                    </Grid>\n                                    <Grid item xs={12} md={10}>\n                                      <Typography\n                                        type=\"body5\"\n                                        color=\"rgba(0,0,0,1)\"\n                                      >\n                                        {ReactHtmlParser(\n                                          ele.cardContentContainer\n                                            .cardContentList[1].cardBody\n                                        )}\n                                      </Typography>\n                                    </Grid>\n                                  </div>\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </li>\n                        {idx !== myJson[\"qbox_inner\"].length - 1 ? (\n                          <div\n                            style={{\n                              borderBottom: \"1px solid #d8d8d8\",\n                              margin: \"30px 0px 30px 80px\",\n                            }}\n                          ></div>\n                        ) : (\n                          \"\"\n                        )}\n                      </>\n                    ))}\n                  </ul>\n                </div>\n              </>\n            ) : this.state.me === \"ME_QMONEY\" ? (\n              <>\n                {\" \"}\n                <Link\n                  to={{\n                    pathname: \"/\",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"inline-flex\",\n                      alignItems: \"center\",\n                      marginBottom: \"20px\",\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      icon={[\"fas\", \"arrow-left\"]}\n                      style={{\n                        fontSize: \"1.5em\",\n                        margin: \"0px 10px 0px 55px\",\n                        cursor: \"pointer\",\n                        color: \"#999\",\n                      }}\n                    ></FontAwesomeIcon>\n                    <Typography cursor=\"pointer\" color=\"#999\">\n                      Back\n                    </Typography>\n                  </div>\n                </Link>\n                <div className={classes.top}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <div style={{ margin: \"0px 0px 10px 0px\" }}>\n                        <Typography fontSize=\"46px\"> QMoney</Typography>\n                      </div>\n                      <Typography fontSize=\"30px\" color=\"rgba(0,0,0,0.6)\">\n                        {ReactHtmlParser(\n                          myJson.qmoney_outer.cardContentContainer\n                            .cardContentList[0].cardBody\n                        )}{\" \"}\n                      </Typography>\n                      <Typography fontSize=\"14px\">\n                        {ReactHtmlParser(\n                          myJson.qmoney_outer.cardContentContainer\n                            .cardContentList[1].cardBody\n                        )}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={5} style={{ textAlign: \"right\" }}></Grid>\n                    <Grid item xs={12}>\n                      <div style={{ textAlign: \"center\" }}>\n                        {ReactHtmlParser(\n                          myJson.qmoney_milestone0.cardContentContainer\n                            .cardContentList[0].cardBody\n                        )}{\" \"}\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n                <div className={classes.middle}>\n                  <div style={{ margin: \"0px 0px 20px 0px\" }}>\n                    <Typography color=\"rgba(0,0,0,1)\" fontSize=\"20px\">\n                      QMoney Modules\n                    </Typography>\n                  </div>\n\n                  <ul className=\"timeline\">\n                    {myJson[\"qmoney_inner\"].map((ele, idx) => (\n                      <>\n                        <li>\n                          <div className={classes.MERow} class=\"meRow\">\n                            <Grid container>\n                              <Grid item xs={12}>\n                                <Typography\n                                  type=\"heading3\"\n                                  color=\"rgba(0,0,0,1)\"\n                                >\n                                  {ReactHtmlParser(\n                                    ele.cardContentContainer.containerTitle\n                                  )}\n                                </Typography>\n                                <div style={{ marginTop: \"16px\" }}>\n                                  <Grid container>\n                                    <Grid item xs={12} md={12} lg={12}>\n                                      <Typography\n                                        type=\"body5\"\n                                        color=\"rgba(0,0,0,0.6)\"\n                                      >\n                                        Scope of work:\n                                      </Typography>\n                                    </Grid>\n                                    <Grid item xs={12} md={12} lg={12}>\n                                      <br></br>\n                                      <Typography type=\"body5\" color=\"#000\">\n                                        {ReactHtmlParser(\n                                          ele.cardContentContainer\n                                            .cardContentList[0].cardBody\n                                        )}\n                                      </Typography>\n                                    </Grid>\n                                  </Grid>\n\n                                  <div style={{ marginTop: \"25px\" }}>\n                                    <Grid item xs={12} md={2}>\n                                      <Typography\n                                        type=\"body5\"\n                                        color=\"rgba(0,0,0,0.6)\"\n                                      >\n                                        Skills Learned:\n                                      </Typography>\n                                    </Grid>\n                                    <Grid item xs={12} md={10}>\n                                      <Typography\n                                        type=\"body5\"\n                                        color=\"rgba(0,0,0,1)\"\n                                      >\n                                        {ReactHtmlParser(\n                                          ele.cardContentContainer\n                                            .cardContentList[1].cardBody\n                                        )}\n                                      </Typography>\n                                    </Grid>\n                                  </div>\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </li>\n                        {idx !== myJson[\"qmoney_inner\"].length - 1 ? (\n                          <div\n                            style={{\n                              borderBottom: \"1px solid #d8d8d8\",\n                              margin: \"30px 0px 30px 80px\",\n                            }}\n                          ></div>\n                        ) : (\n                          \"\"\n                        )}\n                      </>\n                    ))}\n                  </ul>\n                </div>\n              </>\n            ) : this.state.me === \"ME_PS_DS1\" ? (\n              <>\n                {\" \"}\n                <Link\n                  to={{\n                    pathname: \"/\",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"inline-flex\",\n                      alignItems: \"center\",\n                      marginBottom: \"20px\",\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      icon={[\"fas\", \"arrow-left\"]}\n                      style={{\n                        fontSize: \"1.5em\",\n                        margin: \"0px 10px 0px 55px\",\n                        cursor: \"pointer\",\n                        color: \"#999\",\n                      }}\n                    ></FontAwesomeIcon>\n                    <Typography cursor=\"pointer\" color=\"#999\">\n                      Back\n                    </Typography>\n                  </div>\n                </Link>\n                <div className={classes.top}>\n                  <Grid container>\n                    <Grid item xs={7}>\n                      <div style={{ margin: \"0px 0px 10px 0px\" }}>\n                        <Typography fontSize=\"46px\">QPrep</Typography>\n                      </div>\n                      <Typography fontSize=\"34px\" color=\"rgba(0,0,0,0.6)\">\n                        {ReactHtmlParser(\n                          myJson.qprep_outer.cardContentContainer\n                            .cardContentList[0].cardBody\n                        )}{\" \"}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={5} style={{ textAlign: \"center\" }}>\n                      <Zoom>\n                        {/* <img width=\"300px\" src={qmoney}></img> */}\n                      </Zoom>\n                    </Grid>\n                  </Grid>\n                </div>\n                <div className={classes.middle}>\n                  <Typography color=\"rgba(0,0,0,1)\" fontSize=\"20px\">\n                    QPrep Modules\n                  </Typography>\n                  <ul className=\"timeline\">\n                    {myJson[\"qprep_inner\"].map((ele, idx) => (\n                      <>\n                        <li>\n                          <div className={classes.MERow} class=\"meRow\">\n                            <Grid container>\n                              <Grid item xs={12}>\n                                <Typography\n                                  type=\"heading3\"\n                                  color=\"rgba(0,0,0,1)\"\n                                >\n                                  {ReactHtmlParser(\n                                    ele.cardContentContainer.containerTitle\n                                  )}\n                                </Typography>\n                                <div style={{ marginTop: \"16px\" }}>\n                                  <Grid container>\n                                    <Grid item xs={12} md={12} lg={12}>\n                                      <Typography\n                                        type=\"body5\"\n                                        color=\"rgba(0,0,0,0.6)\"\n                                      >\n                                        Scope of work:\n                                      </Typography>\n                                    </Grid>\n                                    <Grid item xs={12} md={12} lg={12}>\n                                      <br></br>\n                                      <Typography type=\"body5\" color=\"#000\">\n                                        {ReactHtmlParser(\n                                          ele.cardContentContainer\n                                            .cardContentList[0].cardBody\n                                        )}\n                                      </Typography>\n                                    </Grid>\n                                  </Grid>\n\n                                  <div style={{ marginTop: \"25px\" }}>\n                                    <Grid item xs={12} md={2}>\n                                      <Typography\n                                        type=\"body5\"\n                                        color=\"rgba(0,0,0,0.6)\"\n                                      >\n                                        Skills Learned:\n                                      </Typography>\n                                    </Grid>\n                                    <Grid item xs={12} md={10}>\n                                      <Typography\n                                        type=\"body5\"\n                                        color=\"rgba(0,0,0,1)\"\n                                      >\n                                        {ReactHtmlParser(\n                                          ele.cardContentContainer\n                                            .cardContentList[1].cardBody\n                                        )}\n                                      </Typography>\n                                    </Grid>\n                                  </div>\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </li>\n                        {idx !== myJson[\"qprep_inner\"].length - 1 ? (\n                          <div\n                            style={{\n                              borderBottom: \"1px solid #d8d8d8\",\n                              margin: \"30px 0px 30px 80px\",\n                            }}\n                          ></div>\n                        ) : (\n                          \"\"\n                        )}\n                      </>\n                    ))}\n                  </ul>\n                </div>\n              </>\n            ) : this.state.me === \"ME_QCHARM\" ? (\n              <>\n                {\" \"}\n                <Link\n                  to={{\n                    pathname: \"/\",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"inline-flex\",\n                      alignItems: \"center\",\n                      marginBottom: \"20px\",\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      icon={[\"fas\", \"arrow-left\"]}\n                      style={{\n                        fontSize: \"1.5em\",\n                        margin: \"0px 10px 0px 55px\",\n                        cursor: \"pointer\",\n                        color: \"#999\",\n                      }}\n                    ></FontAwesomeIcon>\n                    <Typography cursor=\"pointer\" color=\"#999\">\n                      Back\n                    </Typography>\n                  </div>\n                </Link>\n                <div className={classes.top}>\n                  <Grid container>\n                    <Grid item xs={7}>\n                      <div style={{ margin: \"0px 0px 10px 0px\" }}>\n                        <Typography fontSize=\"46px\">QCharm</Typography>\n                      </div>\n                      <Typography fontSize=\"34px\" color=\"rgba(0,0,0,0.6)\">\n                        {ReactHtmlParser(\n                          myJson.qcharm_outer.cardContentContainer\n                            .cardContentList[0].cardBody\n                        )}{\" \"}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={5} style={{ textAlign: \"center\" }}>\n                      <Zoom>\n                        {/* <img width=\"300px\" src={qmoney}></img> */}\n                      </Zoom>\n                    </Grid>\n                  </Grid>\n                </div>\n                <div className={classes.middle}>\n                  <Typography color=\"rgba(0,0,0,1)\" fontSize=\"20px\">\n                    QCharm Modules\n                  </Typography>\n                  <ul className=\"timeline\">\n                    {myJson[\"qcharm_inner\"].map((ele, idx) => (\n                      <>\n                        <li>\n                          <div className={classes.MERow} class=\"meRow\">\n                            <Grid container>\n                              <Grid item xs={12}>\n                                <Typography\n                                  type=\"heading3\"\n                                  color=\"rgba(0,0,0,1)\"\n                                >\n                                  {ReactHtmlParser(\n                                    ele.cardContentContainer.containerTitle\n                                  )}\n                                </Typography>\n                                <div style={{ marginTop: \"16px\" }}>\n                                  <Grid container>\n                                    <Grid item xs={12} md={12} lg={12}>\n                                      <Typography\n                                        type=\"body5\"\n                                        color=\"rgba(0,0,0,0.6)\"\n                                      >\n                                        Scope of work:\n                                      </Typography>\n                                    </Grid>\n                                    <Grid item xs={12} md={12} lg={12}>\n                                      <br></br>\n                                      <Typography type=\"body5\" color=\"#000\">\n                                        {ReactHtmlParser(\n                                          ele.cardContentContainer\n                                            .cardContentList[0].cardBody\n                                        )}\n                                      </Typography>\n                                    </Grid>\n                                  </Grid>\n\n                                  <div style={{ marginTop: \"25px\" }}>\n                                    <Grid item xs={12} md={2}>\n                                      <Typography\n                                        type=\"body5\"\n                                        color=\"rgba(0,0,0,0.6)\"\n                                      >\n                                        Skills Learned:\n                                      </Typography>\n                                    </Grid>\n                                    <Grid item xs={12} md={10}>\n                                      <Typography\n                                        type=\"body5\"\n                                        color=\"rgba(0,0,0,1)\"\n                                      >\n                                        {ReactHtmlParser(\n                                          ele.cardContentContainer\n                                            .cardContentList[1].cardBody\n                                        )}\n                                      </Typography>\n                                    </Grid>\n                                  </div>\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </li>\n                        {idx !== myJson[\"qcharm_inner\"].length - 1 ? (\n                          <div\n                            style={{\n                              borderBottom: \"1px solid #d8d8d8\",\n                              margin: \"30px 0px 30px 80px\",\n                            }}\n                          ></div>\n                        ) : (\n                          \"\"\n                        )}\n                      </>\n                    ))}\n                  </ul>\n                </div>\n              </>\n            ) : (\n              <center>\n                <Typography color=\"#999999\">No data available</Typography>\n              </center>\n            )}\n          </Card>\n        </Grid>\n        <Grid row lg={2} md={1} xs={1}></Grid>\n      </Grid>\n    );\n  }\n}\nexport default withStyles(styles)(MEDetail);\n","import React, { Component } from \"react\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport About from \"./components/About\";\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/common/Navbar\";\nimport MEDetail from \"./components/MEDetail\";\n\nconst currentTheme = \"light\";\nclass AppWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Crio.Do Portfolio\",\n      defaultPath: \"/Crio-Launch-Feb-2020-\" + process.env.REACT_APP_GITHUB,\n      detailPath: \"/detail/:meid\"\n    };\n    console.log(this.state.detailPath);\n  }\n\n  theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#7C8DFF\",\n        primary: \"#7C8DFF\",\n        primaryBackground: \"#F1F4FE\",\n        primaryBorder: \"#D8D8D8\",\n        white: currentTheme === \"light\" ? \"#fff\" : \"#000\",\n        black: \"#000000\",\n        red: \"#E66565\",\n        green: \"#70CC63\",\n        orange: \"#E6935A\",\n        grey: \"#999999\",\n        greyTwo: \"#EEEEEE\",\n        purple: \"#570DA8\",\n        yellow: \"#F1C21B\"\n      },\n\n      secondary: {\n        main: \"#ffffff\",\n        secondaryBackground: \"#C9D0FF\",\n        tertiaryBackground: \"#F7F7F7\"\n      }\n    }\n  });\n  getTitle(me) {\n    this.setState({ title: this.state.title.concat(me) });\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Router basename={this.state.defaultPath}>\n        <MuiThemeProvider theme={this.theme}>\n          <div\n            style={{\n              backgroundColor: this.theme.palette.secondary.tertiaryBackground,\n              height: \"100vh\",\n              overflowX: \"scroll\"\n            }}\n          >\n            <Navbar title={this.state.title}></Navbar>\n\n            <Switch>\n              <Route\n                exact\n                path={this.state.defaultPath}\n                render={() => <Home getTitle={this.getTitle.bind(this)} />}\n              ></Route>\n              <Route path={this.state.detailPath} component={MEDetail} />\n              <Route\n                render={() => <Home getTitle={this.getTitle.bind(this)} />}\n              ></Route>\n            </Switch>\n          </div>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n}\nexport default AppWrapper;\n","import React, { Component } from \"react\";\nimport AppWrapper from \"./AppWrapper\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faLinkedin, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faArrowRight,\n  faFolder,\n  faFileAlt,\n  faArrowLeft\n} from \"@fortawesome/pro-solid-svg-icons\";\n\nlibrary.add(\n  faLinkedin,\n  faGithub,\n  faArrowRight,\n  faFolder,\n  faFileAlt,\n  faArrowLeft\n);\n\nclass App extends Component {\n  componentDidMount() {\n    document.title = \"Portfolio - Crio.Do\";\n  }\n  render() {\n    return <AppWrapper></AppWrapper>;\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nrequire(\"dotenv\").config();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/crio-logo-white.c9536e04.svg\";"],"sourceRoot":""}